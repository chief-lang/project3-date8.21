#include<stdio.h>//**算术运算符:加+ 减-（优先级4） 乘* 除/ 求余%（优先级3）
int main()//**自增自减运算符：++i是运算i前加1  --i是运算i前减1  i++是运算i后加1   i--是运算后减1(优先级2）
          //**关系运算符：小于<  小于等于<=  大于>  大于等于>=（优先级6）  等于==  不等于!=（优先级7）  具有两种结果：真(1)和假(0）
	      //**强制转换运算符：圆括号（）（最高优先级）
	      //**逻辑运算符：逻辑与：&&（两边结果都为真，结果才为真）（优先级11）   逻辑或||（两边结果同时为假，结果才为假）（优先级12）     逻辑非：！（假变真，真变假)(优先级2）
	     //**位运算符(与二进制有关）：左移：<<  右移：>>  按位非：~   按位或：|  按位与：&  按位异或：^
		 //{左右移举例：int a=10;二进制：0000 1010（算法：从右往左：0*2的0次方+1*2的1次方+0*2的2次方+1*2的3次方……）,若a<<1;此时为：0001 0100.
		 //左移规律：左移n位，乘以2的n次方（对于十进制）；类推：右移n位，除以2的n次方（对于十进制）}。
	     //{按位非：二进制1变0，0变1（得原码）（但输出一般为补码）.如：10的二进制为0000 1010变为1111 0101（这是原码） 注意：二进制的最高位表示的为符号位：0表示正数，1表示负数。
	    //注意：二进制数（全部有32位次）包含：原码 反码 补码（一般输出的为补码）正数：原码=反码=补码
	    //负数：反码为原码的符号位不变，其他位1变0，0变1。 补码=反码+1}
	    //{按位或：对应位置，有1则为1，否则为0   例：int d=5(0000 0101) , int e=3(0000 0011),d|e则为7(0000 0111)}
	    //{按位与：对应位置都为1则为1，否则为0.例：int d=5(0000 0101),int e=3(0000 0011),d&e=1(0000 0001)}
	    //按位异或：对应位置相同为0，不同为1.例：int h=5(0000 0101),int i=3(0000 0011),h^i=6(0000 0110)}
	    //**赋值运算符（优先级14）：= += -= *= /= %=
	    //{例：int a=10,int b=0,b+=a;此时输出b=b+a=10.b-=a;此时输出b=b-a=-10(原码）。b*=a;此时输出b=b*a=0.b/=a;b=b/a.b%a,b=b%a.}
	    //**逗号运算符：，   {例：int a=(1,2,3,4,5,6,7,8,9);及从左到右依次赋值给a,最后a=9.}
	    //**条件运算符：表达式1？ 表达式2：表达式3  (表达式1的结果为真，执行表达式2，否则执行表达式3
	    //{例：int a=10,int b=2,a>b?a=11:b=11;则a==11（a>b为表达式1，a==11为表达式2，b=11为表达式3）}
	    //**sizeof:();求类型大小的{例：printf("%d",sizeof(10));此时输出为4（10的字节为为4个字节）}
	    //注意：操作数：一个运算符要用到几个变量计算。比如需要两个数进行计算，那么叫做双目运算符。

{      
	int a = 10;
	int b;
	b = a++;
	printf("b=%d a=%d\n", b, a);//a=11 b=10
	int c =10;
	int d;
	d = ++c;
	printf("c=%d d=%d\n",c, d);//c=11 d=11
	return 0;
}
